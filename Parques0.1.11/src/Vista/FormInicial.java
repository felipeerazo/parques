/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;

import Controlador.Agente;
import Modelo.DireccionAgente;
import java.net.InetAddress;
import java.util.LinkedList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Usuario
 */
public class FormInicial extends javax.swing.JFrame {

    int diferenciaX;
    int diferenciaY;
    int jugadores = 0;
    String jugadorSig;
    Agente ag = new Agente();
    LinkedList<DireccionAgente> direcciones;
    String colorJugador;
    private FormTablero ft;

    /**
     * Creates new form FormInicial
     */
    public FormInicial(Agente ag) {
        direcciones = new LinkedList<DireccionAgente>();
        this.ag = ag;
        this.setLocation(500, 150);
        addMouseListener(new java.awt.event.MouseAdapter() {
            @Override
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
        });
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            @Override
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                formMouseDragged(evt);
            }
        });
        initComponents();
        jLabel1.setVisible(false);
        jLabel2.setVisible(false);
        jLabel4.setVisible(false);
        jTextField1.setVisible(false);
        jTextField2.setVisible(false);
        jTextField3.setVisible(false);
        jButton4.setVisible(false);
        jButton1.doClick();
        jButton4.doClick();
    }

    private void formMousePressed(java.awt.event.MouseEvent evt) {
        diferenciaX = evt.getXOnScreen() - this.getLocationOnScreen().x;
        diferenciaY = evt.getYOnScreen() - this.getLocationOnScreen().y;
    }

    private void formMouseDragged(java.awt.event.MouseEvent evt) {
        this.setLocation(evt.getXOnScreen() - diferenciaX, evt.getYOnScreen() - diferenciaY);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        panelInicial1 = new Vista.PanelInicial();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();

        jLabel3.setText("Direcci贸n ip Jugador 2:");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jButton1.setText("Jugar en linea");
        jButton1.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton3.setText("Salir");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Direcci贸n ip Jugador 1:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Direcci贸n ip Jugador 2:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Direcci贸n ip Jugador 3:");

        jTextField1.setText("192.168.1.6");
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jTextField2.setText("192.168.1.1");
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        jTextField3.setText("192.168.1.4");

        jButton4.setText("Ok");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelInicial1Layout = new javax.swing.GroupLayout(panelInicial1);
        panelInicial1.setLayout(panelInicial1Layout);
        panelInicial1Layout.setHorizontalGroup(
            panelInicial1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelInicial1Layout.createSequentialGroup()
                .addGroup(panelInicial1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelInicial1Layout.createSequentialGroup()
                        .addGap(152, 152, 152)
                        .addComponent(jButton1))
                    .addGroup(panelInicial1Layout.createSequentialGroup()
                        .addGap(176, 176, 176)
                        .addComponent(jButton3)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 82, Short.MAX_VALUE)
                .addGroup(panelInicial1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelInicial1Layout.createSequentialGroup()
                        .addGroup(panelInicial1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(panelInicial1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(jTextField3))
                            .addGroup(panelInicial1Layout.createSequentialGroup()
                                .addGroup(panelInicial1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2))
                                .addGap(18, 18, 18)
                                .addGroup(panelInicial1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTextField1)
                                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(90, 90, 90))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelInicial1Layout.createSequentialGroup()
                        .addComponent(jButton4)
                        .addGap(98, 98, 98))))
        );
        panelInicial1Layout.setVerticalGroup(
            panelInicial1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelInicial1Layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(panelInicial1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelInicial1Layout.createSequentialGroup()
                        .addGroup(panelInicial1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(panelInicial1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(panelInicial1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelInicial1Layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(88, 88, 88)))
                .addGroup(panelInicial1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton3)
                    .addComponent(jButton4))
                .addContainerGap(146, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelInicial1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelInicial1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:

        //jugadores = Integer.parseInt(JOptionPane.showInputDialog("Ingrese numero de jugadores, minimo 2, maximo 4"));
        jugadores = 2;
        if (jugadores == 2) {
            jLabel1.setVisible(true);
            jTextField1.setVisible(true);
        } else if (jugadores == 3) {
            jLabel1.setVisible(true);
            jTextField1.setVisible(true);
            jLabel2.setVisible(true);
            jTextField2.setVisible(true);
        } else if (jugadores == 4) {
            jLabel1.setVisible(true);
            jTextField1.setVisible(true);
            jLabel2.setVisible(true);
            jTextField2.setVisible(true);
            jLabel4.setVisible(true);
            jTextField3.setVisible(true);
        }
        jButton4.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        String color;
        InetAddress localHost;
        String local = "";
        try {
            localHost = InetAddress.getLocalHost();
            System.out.println(localHost.toString());
            local = String.valueOf(localHost);
        } catch (Exception e) {
            System.out.println(e);
        }

        String vdireccionlocal[] = local.split("\\.");

        int miip = Integer.parseInt(vdireccionlocal[3]);

        if (jugadores == 2) {
            jugadorSig = jTextField1.getText();
            String njugadorSig = "ag1@" + jugadorSig + ":1099/JADE";
            String djugadorSig = "http://" + jugadorSig + ":7778/acc";
            String vdireccion1[] = jugadorSig.split("\\.");
            if (Integer.parseInt(vdireccion1[3]) >= miip) {
                color = "verde";
                colorJugador = "rojo";
            } else {
                color = "rojo";
                colorJugador = "verde";
            }

            direcciones.add(new DireccionAgente(njugadorSig, djugadorSig, color));

        } else if (jugadores == 3) {
            String direccion1 = jTextField1.getText();
            String direccion2 = jTextField2.getText();

            String vdireccion1[] = direccion1.split("\\.");
            String vdireccion2[] = direccion2.split("\\.");

            int valores[] = new int[3];
            valores[0] = Integer.parseInt(vdireccion1[3]);
            valores[1] = Integer.parseInt(vdireccion2[3]);
            valores[2] = Integer.parseInt(vdireccionlocal[3]);

            //ordenar los valores por el ultimo valor de la ip
            for (int k = 0; k < 3; k++) {
                for (int f = 0; f < 2 - k; f++) {
                    if (valores[f] > valores[f + 1]) {
                        int aux;
                        aux = valores[f];
                        valores[f] = valores[f + 1];
                        valores[f + 1] = aux;
                    }
                }
            }

//            for (int i = 0; i < valores.length; i++) {
//                System.out.println(valores[i]);
//            }
            if (valores[0] == miip) {
                colorJugador = "rojo";
            } else {
                color = "rojo";
                if (valores[0] == Integer.parseInt(vdireccion1[3])) {
                    String njugadorSig = "ag1@" + direccion1 + ":1099/JADE";
                    String djugadorSig = "http://" + direccion1 + ":7778/acc";
                    direcciones.add(new DireccionAgente(njugadorSig, djugadorSig, color));
                } else if (valores[0] == Integer.parseInt(vdireccion2[3])) {
                    String njugadorSig = "ag1@" + direccion2 + ":1099/JADE";
                    String djugadorSig = "http://" + direccion2 + ":7778/acc";
                    direcciones.add(new DireccionAgente(njugadorSig, djugadorSig, color));
                }
            }

            if (valores[1] == miip) {
                colorJugador = "verde";
            } else {
                color = "verde";
                if (valores[1] == Integer.parseInt(vdireccion1[3])) {
                    String njugadorSig = "ag1@" + direccion1 + ":1099/JADE";
                    String djugadorSig = "http://" + direccion1 + ":7778/acc";
                    direcciones.add(new DireccionAgente(njugadorSig, djugadorSig, color));
                } else if (valores[1] == Integer.parseInt(vdireccion2[3])) {
                    String njugadorSig = "ag1@" + direccion2 + ":1099/JADE";
                    String djugadorSig = "http://" + direccion2 + ":7778/acc";
                    direcciones.add(new DireccionAgente(njugadorSig, djugadorSig, color));
                }
            }

            if (valores[2] == miip) {
                colorJugador = "azul";
            } else {
                color = "azul";
                if (valores[2] == Integer.parseInt(vdireccion1[3])) {
                    String njugadorSig = "ag1@" + direccion1 + ":1099/JADE";
                    String djugadorSig = "http://" + direccion1 + ":7778/acc";
                    direcciones.add(new DireccionAgente(njugadorSig, djugadorSig, color));
                } else if (valores[2] == Integer.parseInt(vdireccion2[3])) {
                    String njugadorSig = "ag1@" + direccion2 + ":1099/JADE";
                    String djugadorSig = "http://" + direccion2 + ":7778/acc";
                    direcciones.add(new DireccionAgente(njugadorSig, djugadorSig, color));
                }
            }

        } else if (jugadores == 4) {
            String direccion1 = jTextField1.getText();
            String direccion2 = jTextField2.getText();
            String direccion3 = jTextField3.getText();

            String vdireccion1[] = direccion1.split("\\.");
            String vdireccion2[] = direccion2.split("\\.");
            String vdireccion3[] = direccion3.split("\\.");

            int valores[] = new int[4];
            valores[0] = Integer.parseInt(vdireccion1[3]);
            valores[1] = Integer.parseInt(vdireccion2[3]);
            valores[2] = Integer.parseInt(vdireccion3[3]);
            valores[3] = Integer.parseInt(vdireccionlocal[3]);

            //ordenar los valores por el ultimo valor de la ip
            for (int k = 0; k < 4; k++) {
                for (int f = 0; f < 3 - k; f++) {
                    if (valores[f] > valores[f + 1]) {
                        int aux;
                        aux = valores[f];
                        valores[f] = valores[f + 1];
                        valores[f + 1] = aux;
                    }
                }
            }

            if (valores[0] == miip) {
                colorJugador = "rojo";
            } else {
                color = "rojo";
                if (valores[0] == Integer.parseInt(vdireccion1[3])) {
                    String njugadorSig = "ag1@" + direccion1 + ":1099/JADE";
                    String djugadorSig = "http://" + direccion1 + ":7778/acc";
                    direcciones.add(new DireccionAgente(njugadorSig, djugadorSig, color));
                } else if (valores[0] == Integer.parseInt(vdireccion2[3])) {
                    String njugadorSig = "ag1@" + direccion2 + ":1099/JADE";
                    String djugadorSig = "http://" + direccion2 + ":7778/acc";
                    direcciones.add(new DireccionAgente(njugadorSig, djugadorSig, color));
                } else if (valores[0] == Integer.parseInt(vdireccion3[3])) {
                    String njugadorSig = "ag1@" + direccion3 + ":1099/JADE";
                    String djugadorSig = "http://" + direccion3 + ":7778/acc";
                    direcciones.add(new DireccionAgente(njugadorSig, djugadorSig, color));
                }
            }

            if (valores[1] == miip) {
                colorJugador = "verde";
            } else {
                color = "verde";
                if (valores[1] == Integer.parseInt(vdireccion1[3])) {
                    String njugadorSig = "ag1@" + direccion1 + ":1099/JADE";
                    String djugadorSig = "http://" + direccion1 + ":7778/acc";
                    direcciones.add(new DireccionAgente(njugadorSig, djugadorSig, color));
                } else if (valores[1] == Integer.parseInt(vdireccion2[3])) {
                    String njugadorSig = "ag1@" + direccion2 + ":1099/JADE";
                    String djugadorSig = "http://" + direccion2 + ":7778/acc";
                    direcciones.add(new DireccionAgente(njugadorSig, djugadorSig, color));
                } else if (valores[1] == Integer.parseInt(vdireccion3[3])) {
                    String njugadorSig = "ag1@" + direccion3 + ":1099/JADE";
                    String djugadorSig = "http://" + direccion3 + ":7778/acc";
                    direcciones.add(new DireccionAgente(njugadorSig, djugadorSig, color));
                }
            }

            if (valores[2] == miip) {
                colorJugador = "azul";
            } else {
                color = "azul";
                if (valores[2] == Integer.parseInt(vdireccion1[3])) {
                    String njugadorSig = "ag1@" + direccion1 + ":1099/JADE";
                    String djugadorSig = "http://" + direccion1 + ":7778/acc";
                    direcciones.add(new DireccionAgente(njugadorSig, djugadorSig, color));
                } else if (valores[2] == Integer.parseInt(vdireccion2[3])) {
                    String njugadorSig = "ag1@" + direccion2 + ":1099/JADE";
                    String djugadorSig = "http://" + direccion2 + ":7778/acc";
                    direcciones.add(new DireccionAgente(njugadorSig, djugadorSig, color));
                } else if (valores[2] == Integer.parseInt(vdireccion3[3])) {
                    String njugadorSig = "ag1@" + direccion3 + ":1099/JADE";
                    String djugadorSig = "http://" + direccion3 + ":7778/acc";
                    direcciones.add(new DireccionAgente(njugadorSig, djugadorSig, color));
                }
            }

            if (valores[3] == miip) {
                colorJugador = "amarillo";
            } else {
                color = "amarillo";
                if (valores[3] == Integer.parseInt(vdireccion1[3])) {
                    String njugadorSig = "ag1@" + direccion1 + ":1099/JADE";
                    String djugadorSig = "http://" + direccion1 + ":7778/acc";
                    direcciones.add(new DireccionAgente(njugadorSig, djugadorSig, color));
                } else if (valores[3] == Integer.parseInt(vdireccion2[3])) {
                    String njugadorSig = "ag1@" + direccion2 + ":1099/JADE";
                    String djugadorSig = "http://" + direccion2 + ":7778/acc";
                    direcciones.add(new DireccionAgente(njugadorSig, djugadorSig, color));
                } else if (valores[3] == Integer.parseInt(vdireccion3[3])) {
                    String njugadorSig = "ag1@" + direccion3 + ":1099/JADE";
                    String djugadorSig = "http://" + direccion3 + ":7778/acc";
                    direcciones.add(new DireccionAgente(njugadorSig, djugadorSig, color));
                }
            }

        }
//         System.out.println("mi color es " + colorJugador);
//        for (int i = 0; i < direcciones.size(); i++) {
//            System.out.println(direcciones.get(i).nombreAgente + " " + direcciones.get(i).direccionAgente + " " + direcciones.get(i).color);
//        }
        String tipoJ = "";
//        int tipo = JOptionPane.showOptionDialog(null,
//                "Seleccione una opci贸n",
//                "Manual-Automatico",
//                JOptionPane.YES_NO_CANCEL_OPTION,
//                JOptionPane.QUESTION_MESSAGE,
//                null,
//                new Object[]{"Manual", "Automatico"}, "Manual");
        int tipo = 1;
        if (tipo == 0) {
            tipoJ = "manual";
        } else {
            tipoJ = "automatico";
        }

        ag.recibirDatos(direcciones, colorJugador, tipoJ);

        try {
            setFt(new FormTablero(ag));
            getFt().recibirNum(jugadores);
            getFt().getCtrlReglas().setIndiceTurno(0);
            getFt().setVisible(true);
            getFt().empezar();
            this.dispose();
        } catch (InterruptedException ex) {
            Logger.getLogger(FormInicial.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_jButton4ActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed
    /**
     * @param args the command line arguments
     */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private Vista.PanelInicial panelInicial1;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the ft
     */
    public FormTablero getFt() {
        return ft;
    }

    /**
     * @param ft the ft to set
     */
    public void setFt(FormTablero ft) {
        this.ft = ft;
    }
}
